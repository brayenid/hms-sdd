<section class="dark:bg-gray-900 flex flex-col gap-4">
  <div class="flex flex-col lg:flex-row gap-4">
    <div class="content_container bg-indigo-500">
      <div class="relative text-white">
        <p class="text-5xl font-extrabold"><%= goodsFreq %></p>
        <p>Total Barang</p>
        <div class="absolute right-2 top-3">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16 text-indigo-800" viewBox="0 0 256 256">
            <g fill="currentColor">
              <path
                d="m231.93 97.06l-13.87 104a8 8 0 0 1-7.93 6.94H45.87a8 8 0 0 1-7.93-6.94l-13.87-104A8 8 0 0 1 32 88h192a8 8 0 0 1 7.93 9.06"
                opacity=".2" />
              <path
                d="M136 120v56a8 8 0 0 1-16 0v-56a8 8 0 0 1 16 0m103.86-21.89L226 202.12A16 16 0 0 1 210.13 216H45.87A16 16 0 0 1 30 202.12l-13.87-104A16 16 0 0 1 32 80h36.37L122 18.73a8 8 0 0 1 12 0L187.63 80H224a16 16 0 0 1 15.85 18.11ZM89.63 80h76.74L128 36.15ZM224 96H32l13.87 104h164.26Zm-51.16 23.2l-5.6 56a8 8 0 0 0 7.16 8.8a7.44 7.44 0 0 0 .81 0a8 8 0 0 0 7.95-7.2l5.6-56a8 8 0 0 0-15.92-1.6m-89.68 0a8 8 0 0 0-15.92 1.6l5.6 56a8 8 0 0 0 8 7.2a7.44 7.44 0 0 0 .81 0a8 8 0 0 0 7.16-8.76Z" />
            </g>
          </svg>
        </div>
      </div>
    </div>
    <div class="content_container bg-red-500">
      <a href="/goods?stock=10">
        <div class="relative text-white">
          <p class="text-5xl font-extrabold"><%= goodsUnderStock %></p>
          <p>Stok Barang Dibawah 10</p>
          <div class="absolute right-2 top-3">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16 text-red-800" viewBox="0 0 256 256">
              <g fill="currentColor">
                <path d="m208 96l-80 80l-80-80Z" opacity=".2" />
                <path
                  d="M215.39 92.94A8 8 0 0 0 208 88H48a8 8 0 0 0-5.66 13.66l80 80a8 8 0 0 0 11.32 0l80-80a8 8 0 0 0 1.73-8.72M128 164.69L67.31 104h121.38Z" />
              </g>
            </svg>
          </div>
        </div>
      </a>
    </div>
  </div>
  <div class="flex gap-4 flex-col md:flex-row">
    <div class="content_container flex-[1]">
      <h2 class="subhead">Tambahkan Barang</h2>
      <form id="form-goods" class="main_form">
        <div class="flex flex-col gap-4">
          <div>
            <label for="goods">Nama Barang</label>
            <input
              autocomplete="off"
              type="text"
              name="goods"
              id="goods"
              placeholder="Masukan nama barang"
              required="" />
          </div>
          <div>
            <label for="price">Harga Barang</label>
            <input
              autocomplete="off"
              type="text"
              name="price"
              id="price"
              placeholder="Masukan harga barang dalam angka"
              required="" />
          </div>
        </div>
        <button type="submit">Tambah</button>
      </form>
    </div>
    <div class="content_container flex-[2]">
      <h2 class="subhead">Daftar Barang</h2>
      <%- include('partials/goods-table-header.ejs') %>
      <div class="table_container h-80 overflow-auto">
        <table id="table-goods" class="table_fb">
          <thead class="table_fb__head">
            <tr>
              <th scope="col">Nama</th>
              <th scope="col">Harga (Rp)</th>
              <th scope="col">Stok</th>
              <th scope="col">Aksi</th>
            </tr>
          </thead>
          <tbody class="table_fb__body">
            <% if (goods.length) { %> <% goods.forEach(good => { %>
            <tr>
              <td><%= good.name %></td>
              <td><%= addSeparator(good.price) %></td>
              <td><%= good.stock %></td>
              <td><a class="text-blue-500 hover:underline" href="/goods/<%= good.id %>">Edit</a></td>
            </tr>
            <% }) %> <% } else { %>
            <tr>
              <td colspan="4">Tidak ada data !</td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const addCurrency = (number, currency) => {
      const processed = number
        .split('.')
        .join('')
        .toString()
        .replace(/\B(?=(\d{3})+(?!\d))/g, '.')
      if (currency) {
        return `${currency}. ${processed}`
      }
      return processed
    }
    const addSeparator = (number) => {
      const numString = number.toString()
      const parts = numString.split('.')
      parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, '.')
      const formattedNumber = parts.join('.')

      return formattedNumber
    }
    const removeCurrency = (number) => {
      return parseFloat(number.toString().replace(/\./g, ''))
    }
    const sanitizeNonNumber = (value) => {
      return value.replace(/[^0-9.]/g, '')
    }
    const price = document.querySelector('#price')

    price.addEventListener('input', (e) => {
      e.target.value = sanitizeNonNumber(e.target.value, 'Rp')
      e.target.value = addCurrency(e.target.value)
    })

    // FORM STUFF
    const formgoods = document.querySelector('#form-goods')
    formgoods.addEventListener('submit', async (e) => {
      e.preventDefault()

      const goodsName = formgoods.querySelector('#goods').value
      const goodsPrice = removeCurrency(formgoods.querySelector('#price').value)

      const payload = {
        name: goodsName,
        price: goodsPrice
      }

      const { isConfirmed } = await Swal.fire({
        title: 'Yakin menambahkan barang baru?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Tambahkan'
      })

      if (isConfirmed) {
        try {
          await axios.post('/api/goods', payload)
          await Swal.fire({
            title: 'Berhasil!',
            text: 'Anda berhasil menambahkan barang baru',
            icon: 'success',
            confirmButtonText: 'Oke!'
          })
          location.reload()
        } catch (error) {
          const errMessage = error.response.data.message
          await Swal.fire({
            title: 'Error!',
            text: errMessage,
            icon: 'error',
            confirmButtonText: 'Tutup'
          })
        }
      }
    })
  })
</script>
