<section class="dark:bg-gray-900 flex flex-col gap-4">
  <div class="content_container">
    <h2 class="subhead">Tambahkan kategori kamar</h2>
    <form id="form-category" class="main_form">
      <div class="grid gap-4 sm:grid-cols-2 sm:gap-6">
        <div class="sm:col-span-1">
          <label for="name">Nama Kategori</label>
          <input
            autocomplete="off"
            type="text"
            name="category"
            id="name"
            placeholder="Masukan kategori kamar"
            required="" />
        </div>
        <div class="sm:col-span-1">
          <label for="price">Harga Kategori</label>
          <input
            autocomplete="off"
            type="text"
            name="price"
            id="price"
            placeholder="Masukan harga kategori kamar dalam angka"
            required="" />
        </div>
        <div class="sm:col-span-2">
          <label for="detail" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Keterangan</label>
          <textarea
            id="detail"
            rows="4"
            class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            placeholder="Masukan keterangan kategori..."></textarea>
        </div>
      </div>
      <button type="submit">Tambah</button>
    </form>
  </div>
  <div class="content_container">
    <h2 class="subhead">Daftar kategori kamar</h2>
    <div class="table_container">
      <table id="table-cats" class="table_fb">
        <thead class="table_fb__head">
          <tr>
            <th scope="col">Nama</th>
            <th scope="col">Harga (Rp)</th>
            <th scope="col">Aksi</th>
          </tr>
        </thead>
        <tbody class="table_fb__body">
          <tr>
            <td class="px-6 py-4" colspan="3">Memuat...</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    // CURRENCY STUFF
    const addCurrency = (number, currency) => {
      const processed = number
        .split('.')
        .join('')
        .toString()
        .replace(/\B(?=(\d{3})+(?!\d))/g, '.')
      if (currency) {
        return `${currency}. ${processed}`
      }
      return processed
    }
    const addSeparator = (number) => {
      const numString = number.toString()
      const parts = numString.split('.')
      parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, '.')
      const formattedNumber = parts.join('.')

      return formattedNumber
    }
    const removeCurrency = (number) => {
      return parseFloat(number.toString().replace(/\./g, ''))
    }
    const sanitizeNonNumber = (value) => {
      return value.replace(/[^0-9.]/g, '')
    }
    const input = document.querySelector('#price')
    input.addEventListener('input', (e) => {
      e.target.value = sanitizeNonNumber(e.target.value, 'Rp')
      e.target.value = addCurrency(e.target.value)
    })

    // LOAD ROOM CATS
    let roomCats = []
    const response = await axios.get('/api/rooms/category')
    roomCats = response.data.data.categories
    const tableBody = document.querySelector('#table-cats tbody')
    if (roomCats.length) {
      tableBody.innerHTML = ''
      roomCats.forEach((data) => {
        const element = `
        <tr>
          <td>${data.category}</td>
          <td>${addSeparator(data.price)}</td>
          <td><a class="text-blue-500 hover:underline" href="/category/${data.id}">Edit</a></td>
        </tr>
        `
        tableBody.innerHTML += element
      })
    } else {
      const element = `
        <tr>
          <td colspan="3">Tidak ada data !</td>
        </tr>
        `
      tableBody.innerHTML = element
    }

    // FORM STUFF
    const formCategory = document.querySelector('#form-category')
    formCategory.addEventListener('submit', async (e) => {
      e.preventDefault()
      const categoryName = formCategory.querySelector('#name').value
      const categoryPrice = removeCurrency(formCategory.querySelector('#price').value)
      const categoryDetail = formCategory.querySelector('#detail').value

      const payload = {
        category: categoryName,
        price: categoryPrice,
        detail: categoryDetail
      }

      const { isConfirmed } = await Swal.fire({
        title: 'Tambah Kategori',
        text: 'Yakin menambahkan kategori baru?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Tambahkan',
        cancelButtonText: 'Batal'
      })

      if (isConfirmed) {
        try {
          await axios.post('/api/rooms/category', payload)
          await Swal.fire({
            title: 'Berhasil!',
            text: 'Anda berhasil menambahkan kategori baru',
            icon: 'success',
            confirmButtonText: 'Oke!'
          })
          location.reload()
        } catch (error) {
          const errMessage = error.response.data.message
          await Swal.fire({
            title: 'Error!',
            text: errMessage,
            icon: 'error',
            confirmButtonText: 'Tutup'
          })
        }
      }
    })
  })
</script>
