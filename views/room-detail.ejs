<section class="dark:bg-gray-900 flex flex-col gap-4">
  <div class="content_container">
    <h2 class="subhead">Edit/hapus kamar</h2>
    <form id="form-rooms" class="main_form">
      <div class="grid gap-4 sm:grid-cols-2 sm:gap-6">
        <div class="sm:col-span-1">
          <label for="room-number">Nomor Kamar</label>
          <input
            type="number"
            name="room-number"
            id="room-number"
           placeholder="Masukan nomor kamar"
            value="<%= data.number  %>"
            required="" />
        </div>
        <div class="sm:col-span-1">
          <label for="room-cats">Kategori Kamar</label>
          <select id="room-cats"></select>
        </div>
        <div class="sm:col-span-1">
          <label for="room-smoke">Jenis Kamar</label>
          <select id="room-smoke">
            <option <%= !data.smoking ? 'selected' : '' %> value="0" >Non-Smoking</option>
            <option <%= data.smoking ? 'selected' : '' %> value="1" >Smoking</option>
          </select>
        </div>
        <div class="sm:col-span-1">
          <label for="room-bed">Jenis Tempat Tidur</label>
          <select id="room-bed">
            <option <%= data.bed === 'Single' ? 'selected' : '' %> value="Single" >Single</option>
            <option <%= data.bed === 'Double' ? 'selected' : '' %> value="Double" >Double</option>
            <option <%= data.bed === 'Twin' ? 'selected' : '' %> value="Twin" >Twin</option>
            <option <%= data.bed === 'King Size' ? 'selected' : '' %> value="King Size" >King Size</option>
          </select>
        </div>
        <div class="sm:col-span-1">
          <label for="room-availability">Ketersediaan Kamar</label>
          <select id="room-availability">
            <option <%= data.available ? 'selected' : '' %> value="true" >Tersedia</option>
            <option <%= !data.available ? 'selected' : '' %> value="false" >Tidak Tersedia</option>
          </select>
        </div>
      </div>
      <button type="submit">Ubah</button>
      <button
        type="button"
        id="delete-btn"
        onClick="deleteRoom()"
        class="red">
        Hapus
      </button>
      <% if (!data.cleaned) { %>
        <button type="button" class="cyan" onClick="cleanRoom()">Bersihkan Kamar</button>
      <% } %>
      <a
      href="/room"
      class="px-4 py-3 text-sm font-medium text-white bg-rose-700 rounded-lg md:w-auto focus:outline-none hover:bg-rose-800 hover:text-white focus:ring-4 focus:ring-rose-200 dark:focus:ring-rose-900 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">
      Kembali
    </a>
    </form>
    <div class="mt-4 text-right text-xs dark:text-gray-300">Terakhir diubah : <%= data.updated_at  %></div>
    <div class="text-right text-xs dark:text-gray-300">Diubah oleh : <%= data.updatedBy  %></div>
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    // LOAD ROOM CATS
    let roomCats = []
    const response = await axios.get('/api/rooms/category')
    roomCats = response.data.data.categories

    const roomCatsEl = document.querySelector('#room-cats')
    roomCats.forEach((res) => {
      const isSelected = res.id === '<%=data.category%>'
      const element = isSelected
        ? `<option value="${res.id}" selected>${res.category}</option>`
        : `<option value="${res.id}">${res.category}</option>`
      roomCatsEl.innerHTML += element
    })

    // FORM STUFF
    const formRooms = document.querySelector('#form-rooms')
    formRooms.addEventListener('submit', async (e) => {
      e.preventDefault()
      const roomNumber = formRooms.querySelector('#room-number').value
      const roomCats = formRooms.querySelector('#room-cats').value
      const roomSmoke = formRooms.querySelector('#room-smoke').value
      const roomBed = formRooms.querySelector('#room-bed').value
      const roomAvailable = formRooms.querySelector('#room-availability').value

      const payload = {
        number: roomNumber,
        category: roomCats,
        smoking: Boolean(Number(roomSmoke)),
        bed: roomBed,
        available :roomAvailable
      }

      const { isConfirmed } = await Swal.fire({
        title: 'Yakin mengubah kamar?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Ubah'
      })

      if (isConfirmed) {
        try {
          await axios.put('/api/rooms/<%= data.id%>', payload)
          await Swal.fire({
            title: 'Berhasil!',
            text: 'Anda berhasil mengubah kamar',
            icon: 'success',
            confirmButtonText: 'Oke!'
          })
          location.replace('/room')
        } catch (error) {
          const errMessage = error.response.data.message
          await Swal.fire({
            title: 'Error!',
            text: errMessage,
            icon: 'error',
            confirmButtonText: 'Tutup'
          })
        }
      }
    })
  })

  // CLEANINESS STUFF
  const cleanRoom = async () => {
    const { isConfirmed } = await Swal.fire({
      title: 'Yakin mengubah status kebersihan kamar?',
      text : 'Pastikan kamar sudah bersih',
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Ubah'
    })

    if(isConfirmed) {
      try {
        await axios.patch('/api/rooms/cleaniness/<%=data.id%>', {cleaniness: 'clean'})
        await Swal.fire({
          title: 'Berhasil!',
          text: 'Status kebersihan kamar diperbaharui',
          icon: 'success',
          confirmButtonText: 'Oke!'
        })
        location.reload()
      } catch (error) {
        const errMessage = error.response.data.message
        await Swal.fire({
          title: 'Error!',
          text: errMessage,
          icon: 'error',
          confirmButtonText: 'Tutup'
        })
      }
    }
  }

  // DELETE STUFF
  const deleteRoom = async () => {
    const { isConfirmed } = await Swal.fire({
      title: 'Yakin menghapus kamar?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Hapus'
    })

    if (isConfirmed) {
      try {
        await axios.delete('/api/rooms/<%=data.id%>')
        await Swal.fire({
          title: 'Berhasil!',
          text: 'Anda berhasil menghapus kamar',
          icon: 'success',
          confirmButtonText: 'Oke!'
        })
        location.replace('/room')
      } catch (error) {
        const errMessage = error.response.data.message
        await Swal.fire({
          title: 'Error!',
          text: errMessage,
          icon: 'error',
          confirmButtonText: 'Tutup'
        })
      }
    }
  }
</script>
